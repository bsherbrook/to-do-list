(()=>{"use strict";var e={192:(e,t,n)=>{n.d(t,{Z:()=>A});var o=n(537),i=n.n(o),d=n(645),r=n.n(d)()(i());r.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Cabin+Sketch&family=Dekko&family=Quicksand&family=Roboto:wght@300&family=Sniglet&family=Walter+Turncoat&display=swap);"]),r.push([e.id,'body{box-sizing:border-box;display:flex;flex-direction:column;align-items:center;justify-content:center;margin:0;padding:0;background-color:#fbf0ff}body button:hover{cursor:pointer}body #card{display:grid;grid-template-rows:1fr 9fr;grid-template-columns:2fr 4fr;margin-top:100px;background-color:#f0f8ff;height:700px;width:1200px}body #card #header{grid-column:1/3;box-sizing:border-box;display:flex;align-items:center;padding:15px 30px 10px 30px;justify-content:space-between;background-color:#6bb8fb;font-size:35px;border-top-left-radius:10px;border-top-right-radius:10px;font-family:"Cabin Sketch",cursive}body #card #header button{border-radius:5px;height:25px;font-size:15px;font-family:"Quicksand",sans-serif;color:#fff;border:1px solid #fff;background-color:#6bb8fb}body #card #header button:hover{background-color:#5baff9}body #card #sidebar{font-family:"Walter Turncoat",cursive;font-size:20px;box-sizing:border-box;padding:10px 10px 10px 20px;display:flex;flex-direction:column;grid-row:2/3;margin:0;width:235px;height:100%;background-color:#b9deff;border-bottom-left-radius:10px}body #card #sidebar #projectList,body #card #sidebar #noteList{list-style:none}body #card #sidebar #projectList #addProjectButton,body #card #sidebar #noteList #addProjectButton{display:flex;align-items:center;height:25px;width:25px;font-size:20px;font-family:"Walter Turncoat",cursive;color:#000;border-radius:5px;border:outset #fff 1px;background-color:#b9deff}body #card #sidebar .projectFolder,body #card #sidebar .noteFolder{font-size:20px;display:inline-block}body #card #sidebar .projectFolder:hover,body #card #sidebar .noteFolder:hover{cursor:pointer}body #card #sidebar #newFolderBox{display:flex;flex-direction:column;justify-content:center;align-items:center}body #card #sidebar #newFolderBox #newFolderButtons{display:flex;column-gap:15px;margin:5px}body #card #content-card{box-sizing:border-box;position:relative;background-color:#eaffff;display:flex;flex-direction:column;grid-column:2/3;padding:8px;border-bottom-right-radius:10px}body #card #content-card #content-card-buttons{display:flex;justify-content:flex-end;padding:5px;align-items:center;column-gap:10px;background-color:#caffff}body #card #content-card #content-card-buttons #addToDoItem{font-size:25px;border-radius:15px}body #card #content{background-color:#e9fcfc;box-sizing:border-box;padding:5px;width:100%;height:100%;position:relative}body #card #content #currentFolderDisplay{font-family:"Cabin Sketch",cursive;font-size:22px}body #card #content #contentBody{display:block;grid-template-columns:1fr 1fr 1fr 1fr;overflow-y:auto;width:1000px;height:580px}body #card #content .toDoNote{border:1px solid #000;background-color:#ff0;display:flex;flex-direction:column;justify-content:center;align-items:center;overflow-y:auto;width:150px;height:150px;padding:5px;resize:both}body #card #content .toDoProj{display:flex;background-color:#fff;justify-content:space-between;padding:5px;align-items:center;border:1px solid #000}body #card #content .toDoProj #leftsideProj{display:flex;column-gap:10px}body #card #content .toDoProj #rightsideProj{display:flex;column-gap:10px}body #card #content #formBox{opacity:0%;position:absolute;left:200px;top:170px;display:flex;flex-direction:column;padding:10px;background-color:aqua;justify-content:center;align-items:center;padding:10px;z-index:-1}body #card #content #formBox #modalForm{display:flex;flex-direction:column;justify-content:center;align-items:center;z-index:-1}body #card #content #noteBox{opacity:0%;position:absolute;left:200px;top:170px;display:flex;flex-direction:column;padding:10px;background-color:aqua;justify-content:center;align-items:center;padding:10px;z-index:-1}body #card #content #noteBox #noteForm{display:flex;flex-direction:column;justify-content:center;align-items:center}body #card #content #modalDetails{opacity:0%;position:absolute;left:200px;top:170px;display:flex;flex-direction:column;padding:10px;background-color:aqua;justify-content:center;align-items:center;padding:10px;z-index:-1}body #footer{background-color:#f0f8ff;border-radius:15px;bottom:0px;opacity:65%;color:#6bb8fb;padding:5px 20px 5px 20px;text-align:center;position:fixed}',"",{version:3,sources:["webpack://./src/style.scss"],names:[],mappings:"AACA,KACE,qBAAA,CACA,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,sBAAA,CACA,QAAA,CACA,SAAA,CACA,wBAAA,CAEA,kBACE,cAAA,CAEF,WACE,YAAA,CACA,0BAAA,CACA,6BAAA,CACA,gBAAA,CACA,wBAAA,CACA,YAAA,CACA,YAAA,CACA,mBACE,eAAA,CACA,qBAAA,CACA,YAAA,CACA,kBAAA,CACA,2BAAA,CACA,6BAAA,CACA,wBAAA,CACA,cAAA,CACA,2BAAA,CACA,4BAAA,CACA,kCAAA,CAMA,0BACE,iBAAA,CACA,WAAA,CACA,cAAA,CACA,kCAAA,CACA,UAAA,CACA,qBAAA,CACA,wBAAA,CACA,gCACE,wBAAA,CAIN,oBACE,qCAAA,CACA,cAAA,CACA,qBAAA,CACA,2BAAA,CACA,YAAA,CACA,qBAAA,CACA,YAAA,CACA,QAAA,CACA,WAAA,CACA,WAAA,CACA,wBAAA,CACA,8BAAA,CACE,+DACA,eAAA,CACE,mGACE,YAAA,CACA,kBAAA,CACA,WAAA,CACA,UAAA,CACA,cAAA,CACA,qCAAA,CACA,UAAA,CACA,iBAAA,CACA,sBAAA,CACA,wBAAA,CAGJ,mEACE,cAAA,CACA,oBAAA,CACA,+EACE,cAAA,CAGN,kCACE,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CACA,oDACE,YAAA,CACA,eAAA,CACA,UAAA,CAIN,yBACE,qBAAA,CACA,iBAAA,CACA,wBAAA,CACA,YAAA,CACA,qBAAA,CACA,eAAA,CACA,WAAA,CACA,+BAAA,CACA,+CACE,YAAA,CACA,wBAAA,CACA,WAAA,CACA,kBAAA,CACA,eAAA,CACA,wBAAA,CACA,4DACE,cAAA,CACA,kBAAA,CAIN,oBACE,wBAAA,CACA,qBAAA,CACA,WAAA,CACA,UAAA,CACA,WAAA,CACA,iBAAA,CACA,0CACE,kCAAA,CACA,cAAA,CAEF,iCACE,aAAA,CACA,qCAAA,CACA,eAAA,CACA,YAAA,CACA,YAAA,CAEF,8BACE,qBAAA,CACA,qBAAA,CACA,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CACA,eAAA,CACA,WAAA,CACA,YAAA,CACA,WAAA,CACA,WAAA,CAEF,8BACE,YAAA,CACA,qBAAA,CACA,6BAAA,CACA,WAAA,CACA,kBAAA,CACA,qBAAA,CACA,4CACE,YAAA,CACA,eAAA,CAEF,6CACE,YAAA,CACA,eAAA,CAGJ,6BACE,UAAA,CACA,iBAAA,CACA,UAAA,CACA,SAAA,CACA,YAAA,CACA,qBAAA,CACA,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CACA,YAAA,CACA,UAAA,CAEA,wCACE,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CACA,UAAA,CAGJ,6BACE,UAAA,CACA,iBAAA,CACA,UAAA,CACA,SAAA,CACA,YAAA,CACA,qBAAA,CACA,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CACA,YAAA,CACA,UAAA,CACA,uCACE,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CAGJ,kCACE,UAAA,CACA,iBAAA,CACA,UAAA,CACA,SAAA,CACA,YAAA,CACA,qBAAA,CACA,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CACA,YAAA,CACA,UAAA,CAIN,aACE,wBAAA,CACA,kBAAA,CACA,UAAA,CACA,WAAA,CACA,aAAA,CACA,yBAAA,CACA,iBAAA,CACA,cAAA",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Cabin+Sketch&family=Dekko&family=Quicksand&family=Roboto:wght@300&family=Sniglet&family=Walter+Turncoat&display=swap');\nbody {\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: 0;\n  padding: 0;\n  background-color: rgb(251, 240, 255);\n\n  button:hover{\n    cursor: pointer;\n  }\n  #card {\n    display: grid;\n    grid-template-rows: 1fr 9fr;\n    grid-template-columns: 2fr 4fr;\n    margin-top: 100px;\n    background-color: aliceblue;\n    height: 700px;\n    width: 1200px;\n    #header {\n      grid-column: 1/3;\n      box-sizing: border-box;\n      display: flex;\n      align-items: center;\n      padding: 15px 30px 10px 30px;\n      justify-content: space-between;\n      background-color: rgb(107, 184, 251);\n      font-size: 35px;\n      border-top-left-radius: 10px;\n      border-top-right-radius: 10px;\n      font-family: 'Cabin Sketch', cursive;\n      //font-family: 'Quicksand', sans-serif;\n      //font-family: 'Sniglet', cursive;\n      //font-family: 'Roboto', sans-serif;\n      //font-family: 'Walter Turncoat', cursive;\n      //font-family: 'Dekko', cursive;\n      button{\n        border-radius: 5px;\n        height: 25px;\n        font-size: 15px;\n        font-family: 'Quicksand', sans-serif;\n        color: white;\n        border: 1px solid white;\n        background-color: rgb(107, 184, 251);;\n        &:hover{\n          background-color: rgb(91, 175, 249);\n        }\n      }\n    }\n    #sidebar {\n      font-family: 'Walter Turncoat', cursive;\n      font-size:20px;\n      box-sizing: border-box;\n      padding: 10px 10px 10px 20px;\n      display: flex;\n      flex-direction: column;\n      grid-row: 2/3;\n      margin: 0;\n      width: 235px;\n      height: 100%;\n      background-color: rgb(185, 222, 255);\n      border-bottom-left-radius: 10px;\n        #projectList, #noteList{\n        list-style: none;\n          #addProjectButton{\n            display: flex;\n            align-items: center;\n            height: 25px;\n            width: 25px;\n            font-size: 20px;\n            font-family: 'Walter Turncoat', cursive;\n            color: black;\n            border-radius: 5px;\n            border: outset white 1px;\n            background-color: rgb(185, 222, 255);\n          }\n        }\n        .projectFolder, .noteFolder{\n          font-size: 20px;\n          display: inline-block;\n          &:hover{\n            cursor: pointer;\n          }\n        }  \n      #newFolderBox{\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;  \n        #newFolderButtons{\n          display: flex;\n          column-gap: 15px;\n          margin: 5px;\n        }\n      }\n    }\n    #content-card {\n      box-sizing: border-box;\n      position: relative;\n      background-color:rgb(234, 255, 255);\n      display: flex;\n      flex-direction: column;\n      grid-column: 2/3;\n      padding: 8px;\n      border-bottom-right-radius: 10px;\n      #content-card-buttons{\n        display:flex;\n        justify-content: flex-end;\n        padding: 5px;\n        align-items: center;\n        column-gap: 10px;\n        background-color: rgb(202, 255, 255);\n        #addToDoItem{\n          font-size: 25px;\n          border-radius: 15px;  \n        }\n      }  \n    }\n    #content {\n      background-color:rgb(233, 252, 252);\n      box-sizing: border-box;\n      padding: 5px;\n      width: 100%;\n      height: 100%;\n      position: relative;\n      #currentFolderDisplay{\n        font-family: 'Cabin Sketch', cursive;\n        font-size: 22px;\n      }\n      #contentBody{\n        display: block;\n        grid-template-columns: 1fr 1fr 1fr 1fr;\n        overflow-y: auto;\n        width: 1000px;\n        height: 580px;\n      }\n      .toDoNote{\n        border: 1px solid black;\n        background-color: yellow;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        overflow-y: auto;\n        width: 150px;\n        height: 150px;\n        padding: 5px;\n        resize: both;  //add event listener to remember resize positioning?\n      }\n      .toDoProj{\n        display: flex;\n        background-color: white;\n        justify-content: space-between;\n        padding: 5px;\n        align-items: center;\n        border: 1px solid black;\n        #leftsideProj{\n          display: flex;\n          column-gap: 10px;\n        }\n        #rightsideProj{\n          display: flex;\n          column-gap: 10px;\n        }\n      }\n      #formBox {\n        opacity: 0%;\n        position: absolute;\n        left: 200px;\n        top: 170px;\n        display: flex;\n        flex-direction: column;\n        padding: 10px;\n        background-color: aqua;\n        justify-content: center;\n        align-items: center;\n        padding: 10px;\n        z-index: -1;\n\n        #modalForm {\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n          z-index: -1;\n        }\n      }\n      #noteBox {\n        opacity: 0%;\n        position: absolute;\n        left: 200px;\n        top: 170px;\n        display: flex;\n        flex-direction: column;\n        padding: 10px;\n        background-color: aqua;\n        justify-content: center;\n        align-items: center;\n        padding: 10px;\n        z-index: -1;\n        #noteForm {\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n        }\n      }\n      #modalDetails{\n        opacity: 0%;\n        position: absolute;\n        left: 200px;\n        top: 170px;\n        display: flex;\n        flex-direction: column;\n        padding: 10px;\n        background-color: aqua;\n        justify-content: center;\n        align-items: center;\n        padding: 10px;\n        z-index: -1;\n      }\n    }\n  }\n  #footer {\n    background-color: aliceblue;\n    border-radius: 15px;\n    bottom: 0px;\n    opacity: 65%;\n    color: rgb(107, 184, 251);\n    padding: 5px 20px 5px 20px;\n    text-align: center;\n    position: fixed;\n  }\n}\n"],sourceRoot:""}]);const A=r},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,i,d){"string"==typeof e&&(e=[[null,e,void 0]]);var r={};if(o)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(r[c]=!0)}for(var l=0;l<e.length;l++){var a=[].concat(e[l]);o&&r[a[0]]||(void 0!==d&&(void 0===a[5]||(a[1]="@layer".concat(a[5].length>0?" ".concat(a[5]):""," {").concat(a[1],"}")),a[5]=d),n&&(a[2]?(a[1]="@media ".concat(a[2]," {").concat(a[1],"}"),a[2]=n):a[2]=n),i&&(a[4]?(a[1]="@supports (".concat(a[4],") {").concat(a[1],"}"),a[4]=i):a[4]="".concat(i)),t.push(a))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),d="/*# ".concat(i," */");return[t].concat([d]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var d={},r=[],A=0;A<e.length;A++){var c=e[A],l=o.base?c[0]+o.base:c[0],a=d[l]||0,s="".concat(l," ").concat(a);d[l]=a+1;var p=n(s),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var C=i(u,o);o.byIndex=A,t.splice(A,0,{identifier:s,updater:C,references:1})}r.push(s)}return r}function i(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,i){var d=o(e=e||[],i=i||{});return function(e){e=e||[];for(var r=0;r<d.length;r++){var A=n(d[r]);t[A].references--}for(var c=o(e,i),l=0;l<d.length;l++){var a=n(d[l]);0===t[a].references&&(t[a].updater(),t.splice(a,1))}d=c}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,i&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var d=n.sourceMap;d&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(d))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var i=t[o];if(void 0!==i)return i.exports;var d=t[o]={id:o,exports:{}};return e[o](d,d.exports,n),d.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),o=n(795),i=n.n(o),d=n(569),r=n.n(d),A=n(565),c=n.n(A),l=n(216),a=n.n(l),s=n(589),p=n.n(s),u=n(192),C={};C.styleTagTransform=p(),C.setAttributes=c(),C.insert=r().bind(null,"head"),C.domAPI=i(),C.insertStyleElement=a(),t()(u.Z,C),u.Z&&u.Z.locals&&u.Z.locals;const m=document.getElementById("content-card"),f=document.getElementById("sidebar");let y=!0;function x(e){let t=e.target.id,n=document.getElementById(`toDoProj${t}`),o=document.getElementById(`projTitle${t}`).textContent;!1===S[t].status?(n.style.border="inset",S[t].status=!0,document.getElementById(`projTitle${t}`).innerHTML=`<del>${o}</del>`):(document.getElementById(`projTitle${t}`).innerHTML=`${o}`,n.style.border="1px solid black",S[t].status=!1)}function g(){document.getElementById("contentBody").innerText="";for(let e=0;e<S.length;e++)if(S[e].folder===U){const t=document.getElementById("contentBody");t.style.display="block";const n=document.createElement("div");n.classList.add("toDoProj"),n.id=`toDoProj${e}`;const o=document.createElement("div");o.id="leftsideProj";const i=document.createElement("input");i.type="checkbox",i.checked=S[e].status,i.id=`${e}`,i.addEventListener("click",x),o.appendChild(i);const d=document.createElement("div");d.id=`projTitle${e}`,d.textContent=S[e].title,!0===i.checked&&(n.style.border="inset",d.innerHTML=`<del>${S[e].title}</del>`),o.appendChild(d);const r=document.createElement("div");r.id="rightsideProj";const A=document.createElement("button");A.id=`${e}`,A.textContent="Details",A.addEventListener("click",v),r.appendChild(A);const c=document.createElement("div");c.id="projDueDate",c.textContent=S[e].date,r.appendChild(c);const l=document.createElement("button");l.id=`${e}`,l.textContent="X",l.classList.add("cancelProjButton"),l.addEventListener("click",B),r.appendChild(l),n.appendChild(o),n.appendChild(r),t.appendChild(n),!0===S[e].priority&&(d.style.color="red")}}function b(){const e=document.getElementById("contentBody");e.innerText="",e.style.display="block";for(let t=0;t<S.length;t++){const n=document.createElement("div");n.classList.add("toDoProj"),n.id=`toDoProj${t}`;const o=document.createElement("div");o.id="leftsideProj";const i=document.createElement("input");i.type="checkbox",i.checked=S[t].status,i.id=`${t}`,i.addEventListener("click",x),o.appendChild(i);const d=document.createElement("div");d.id=`projTitle${t}`,d.textContent=S[t].title,!0===i.checked&&(n.style.border="inset",d.innerHTML=`<del>${S[t].title}</del>`),o.appendChild(d);const r=document.createElement("div");r.id="rightsideProj";const A=document.createElement("button");A.id=`${t}`,A.textContent="Details",A.addEventListener("click",v),r.appendChild(A);const c=document.createElement("div");c.id="projDueDate",c.textContent=S[t].date,r.appendChild(c);const l=document.createElement("button");l.id=`${t}`,l.textContent="X",l.classList.add("cancelProjButton"),l.addEventListener("click",B),r.appendChild(l),n.appendChild(o),n.appendChild(r),e.appendChild(n),!0===S[t].priority&&(d.style.color="red")}}function B(e){let t=e.target.id;S.splice(t,1),"General"===U?b():g()}let h,E=!0;function v(e){h=e.target.id;const t=document.getElementById("modalTitleData"),n=document.getElementById("modalFolderData"),o=document.getElementById("modalDateData"),i=document.getElementById("modalPriorityData"),d=document.getElementById("modalDetailsData"),r=document.getElementById("modalDetails");!0===E?(r.style.transition="opacity .6s ease-in",r.style.display="flex",r.style.opacity="100%",r.style.zIndex="1",t.innerText=S[h].title,n.innerText=S[h].folder,o.innerText=S[h].date,i.innerText=S[h].priority,d.innerText=S[h].description,E=!1):(r.style.opacity="0",r.style.zIndex="-1",E=!0)}function k(){modalDetails.style.opacity="0",modalDetails.style.zIndex="-1",E=!0}document.getElementById("cancelModalDetails").addEventListener("click",k);const j=document.getElementById("editModalDetails");let I=!1,w="";j.addEventListener("click",(()=>{I=!0,k(),N(),document.getElementById("projectTitle").value=`${S[h].title}`,document.getElementById("projectDescription").value=`${S[h].description}`,document.getElementById("dueDate").value=`${S[h].date}`,document.getElementById("priority").checked=S[h].priority,w=S[h].folder}));let D=!0;const T=document.getElementById("noteBox");function L(){!1===Y&&addProj(),!0===D?(T.style.transition="opacity .6s ease-in",T.style.opacity="100%",T.style.zIndex="1",D=!1):(T.style.opacity="0",T.style.zIndex="-1",D=!0,document.getElementById("noteTitle").value="",document.getElementById("noteDescription").value="")}let F=[];function z(){const e=document.getElementById("contentBody");e.innerText="";const t=document.getElementById("currentFolderName");t.innerText="Notepad",U=t.innerText,e.style.display="grid";for(let t=0;t<F.length;t++){const n=document.createElement("div");n.classList.add("toDoNote"),n.id=`toDoNote${t}`,n.style.position="relative",n.style.backgroundColor=`${F[t].color}`;const o=document.createElement("h3");o.className="noteTitleH3",o.id=`${t}`,o.textContent=F[t].title,o.contentEditable=!0,o.spellcheck=!1,o.addEventListener("input",P),n.appendChild(o);const i=document.createElement("div");i.className="noteDescriptionDiv",i.id=`${t}`,i.contentEditable=!0,i.spellcheck=!1,i.addEventListener("input",P),i.textContent=F[t].description,n.appendChild(i);const d=document.createElement("button");d.style.position="absolute",d.style.bottom="5px",d.id=`${t}`,d.textContent="X",d.classList.add("removeNoteButton"),d.addEventListener("click",q),n.appendChild(d),e.appendChild(n)}}function P(e){let t=e.target.id;"noteTitleH3"===e.target.className&&(F[t].title=e.target.innerText),"noteDescriptionDiv"===e.target.className&&(F[t].description=e.target.innerText)}function q(e){let t=e.target.id;F.splice(t,1),z()}const $=document.getElementById("formBox");let Y=!0;function N(){"Notepad"!==U?!0===Y?($.style.transition="opacity .6s ease-in",$.style.display="flex",$.style.opacity="100%",$.style.zIndex="1",Y=!1):($.style.opacity="0",$.style.zIndex="-1",Y=!0,document.getElementById("projectTitle").value="",document.getElementById("projectDescription").value="",document.getElementById("dueDate").value="",document.getElementById("priority").checked=!1):L()}let S=[];function W(){document.getElementById("newFolderLI").remove()}document.getElementById("cancelProject").addEventListener("click",(function(){$.style.opacity="0",$.style.zIndex="-1",Y=!0,document.getElementById("projectTitle").value="",document.getElementById("projectDescription").value="",document.getElementById("dueDate").value="",document.getElementById("priority").checked=!1}));let U="General";const M=document.getElementById("drop-down"),G=document.getElementById("addProjectButton"),H=document.getElementById("submitProject"),R=document.getElementById("submitNote"),Q=document.getElementById("addToDoItem"),J=document.querySelectorAll(".projectFolder"),O=document.getElementById("currentFolderName"),X=document.getElementById("cancelNote");document.getElementById("notepadFolder").addEventListener("click",z),X.addEventListener("click",(function(){T.style.opacity="0",T.style.zIndex="-1",D=!0,document.getElementById("noteTitle").value="",document.getElementById("noteDescription").value=""})),M.addEventListener("click",(function(){!0===y?(m.style.gridColumn="1/3",f.style.display="none",y=!1):(m.style.gridColumn="",f.style.display="flex",y=!0)})),G.addEventListener("click",(function(){if(document.getElementById("newFolderBox"))return;const e=document.createElement("li");e.setAttribute("id","newFolderLI");const t=document.createElement("div");t.setAttribute("id","newFolderBox");const n=document.createElement("input");n.setAttribute("id","newFolder"),n.setAttribute("type","text"),n.setAttribute("autofocus",""),n.setAttribute("placeholder","Enter Project Name");const o=document.createElement("div");o.setAttribute("id","newFolderButtons");const i=document.createElement("button");i.textContent="Add",i.setAttribute("id","addFolderButton");const d=document.createElement("button");d.setAttribute("id","deleteFolderButton"),d.textContent="X",d.addEventListener("click",W),e.appendChild(t),t.appendChild(n),t.appendChild(o),o.appendChild(i),o.appendChild(d);const r=document.getElementById("projectList");r.insertBefore(e,r.children[r.children.length-1])})),Q.addEventListener("click",N),R.addEventListener("click",(function(e){let t=document.getElementById("noteTitle").value,n=document.getElementById("noteDescription").value,o=document.getElementById("colorSelect").value;t&&(F.push(new function(e,t,n){this.title=e,this.description=t,this.color=n}(t,n,o)),e.preventDefault(),L(),z())})),H.addEventListener("click",(function(e){let t=document.getElementById("projectTitle").value,n=document.getElementById("projectDescription").value,o=document.getElementById("dueDate").value,i=document.getElementById("priority").checked;function d(e,t,n,o,i,d){this.title=e,this.description=t,this.date=n,this.priority=o,this.folder=i,this.status=!1}!1===I&&(S.push(new d(t,n,o,i,U,status)),e.preventDefault(),N(),function(){let e=S.length-1;const t=document.getElementById("contentBody");t.style.display="block";const n=document.createElement("div");n.classList.add("toDoProj"),n.id=`toDoProj${e}`;const o=document.createElement("div");o.id="leftsideProj";const i=document.createElement("input");i.type="checkbox",i.id=`${e}`,i.checked=S[e].status,i.addEventListener("click",x),o.appendChild(i);const d=document.createElement("div");d.id=`projTitle${e}`,d.textContent=S[e].title,o.appendChild(d);const r=document.createElement("div");r.id="rightsideProj";const A=document.createElement("button");A.id=`${e}`,A.textContent="Details",A.addEventListener("click",v),r.appendChild(A);const c=document.createElement("div");c.id="projDueDate",c.textContent=S[e].date,r.appendChild(c);const l=document.createElement("button");l.id=`${e}`,l.classList.add("cancelProjButton"),l.textContent="X",l.addEventListener("click",B),r.appendChild(l),n.appendChild(o),n.appendChild(r),t.appendChild(n),!0===S[e].priority&&(d.style.color="red")}()),!0===I&&(S[h]=new d(t,n,o,i,w),document.getElementById("contentBody").innerText="",e.preventDefault(),"General"===U?b():g(),I=!1,N())})),document.addEventListener("click",(function(e){const t=e.target.closest("#addFolderButton"),n=document.getElementById("newFolder");if(e.target.closest("#deleteFolderButton"),t&&""!==n.value){let e=n.value;const t=document.createElement("li"),o=document.createElement("span"),i=document.getElementById("newFolderLI");o.classList.add("projectFolder"),o.addEventListener("click",(()=>{const e=document.getElementById("currentFolderName");e.innerText=`${o.innerText}`,U=e.innerText,g()})),o.textContent=e,t.appendChild(o);const d=document.getElementById("projectList");i.remove(),d.insertBefore(t,d.children[d.children.length-1])}})),J.forEach((e=>{e.addEventListener("click",(()=>{O.innerText=`${e.innerHTML}`,U=O.innerText,"generalFolder"!==e.id&&g(),"generalFolder"===e.id&&b()}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,